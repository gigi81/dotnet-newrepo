name: 0.8.0$(Rev:.r)

pool:
  vmImage: 'windows-latest'

variables:
  solution: '**/*.sln'
  buildPlatform: 'Any CPU'
  buildConfiguration: 'Release'
  publishVstsFeed: 'dotnet-newrepo/dotnet-newrepo'

steps:
- task: DotNetCoreCLI@2
  displayName: restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    verbosityRestore: normal
    includeNuGetOrg: true

- task: VSBuild@1
  displayName: build
  inputs:
    solution: '$(solution)'
    msbuildArgs: '/p:Version=$(build.buildNumber) /p:PackageOutputPath="$(build.artifactStagingDirectory)"'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true #enable parallel build
    logFileVerbosity: minimal

- task: DotNetCoreCLI@2
  displayName: test
  inputs:
    command: test
    projects: 'test/**/*.csproj'
    arguments: '--configuration $(buildConfiguration) --collect "Code coverage" -p:ParallelizeTestCollections=true'

- task: DotNetCoreCLI@2
  displayName: 'push to project feed'
  inputs:
    command: 'push'
    searchPatternPush: '$(Build.ArtifactStagingDirectory)/**/*.*pkg'
    includesymbols: true
    includesource: true
    publishVstsFeed: '$(publishVstsFeed)'

# task to publish to nuget.org feed (only for release branches)
- task: NuGetCommand@2
  displayName: 'NuGet push nuget.org feed'
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  inputs:
    command: push
    nuGetFeedType: external
    publishFeedCredentials: nuget.org